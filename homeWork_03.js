/*
В JavaScript массивы являются "неправильными" по следующим причинам:

  1)Они совмещают в себе свойства как обычных массивов, так и хеш-таблиц (объектов).
  2)Размер массива может изменяться динамически во время выполнения программы.
  3)Элементы массива могут иметь разные типы данных.
  4)К элементам массива можно обращаться как по индексу, так и по ключу.
  5)Массивы в JS реализованы на основе объектов.

Таким образом, массивы в JS совмещают в себе:

  1)Обычный массив - индексированный набор элементов одного типа фиксированного размера.
  2)Динамический массив - изменяемый размер.
  3)Ассоциативный массив (хеш-таблица) - набор пар ключ-значение.
  4)Массив со смешанными типами.
*/

// Привязка контекста

function logger() {
  console.log(`I output only external context: ${this.item}`);
}

const obj = { item: "some value" };

logger.call(obj); 
logger.apply(obj);
logger.bind(obj)();


// Реализуем полифил для bind
Funtion.proptotype.bind = function(context){
  const func = this;
  return function (...args) {
    return func.apply(context,args);
  }
}

function f () {
  return this
}

let a = bind(f, { a: 1 })

console.log(a()); // { a: 1 }
